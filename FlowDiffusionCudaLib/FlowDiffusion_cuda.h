#ifndef __FLOW_DIFFUSION_CUDA_H__
#define __FLOW_DIFFUSION_CUDA_H__

	// ADD-BY-LEETEN 12/18/2009-BEGIN
	#define	COMPUTE_ENTROPY_VOLUME_HOST					0x01
	#define COMPUTE_ENTROPY_VOLUME_CUDA					0x02
	#define COMPUTE_ENTROPY_VOLUME_WITH_SORTING_CUDA	0x03
	#define COMPUTE_ENTROPY_VOLUME_PER_SCANLINE_CUDA	0x04		// ADD-BY-LEETEN 12/20/2009
	#define COMPUTE_ENTROPY_VOLUME_SORT_PER_VOXEL_CUDA		0x05	// ADD-BY-LEETEN 12/23/2009
	#define COMPUTE_ENTROPY_VOLUME_ON_SPARSE_HISTOGRAM_CUDA	0x06	// ADD-BY-LEETEN 12/23/2009
	#define COMPUTE_ENTROPY_VOLUME_WITH_MARGINAL_HISTOGRAM	0x07	// ADD-BY-LEETEN 12/23/2009
	#define COMPUTE_ENTROPY_VOLUME_WITH_SORTING_IN_VECTORS_CUDA	0x08		// ADD-BY-LEETEN 12/29/2009

	#define COMPUTE_ENTROPY_VOLUME						COMPUTE_ENTROPY_VOLUME_CUDA	// COMPUTE_ENTROPY_VOLUME_PER_SCANLINE_CUDA	// COMPUTE_ENTROPY_VOLUME_CUDA	// COMPUTE_ENTROPY_VOLUME_PER_SCANLINE_CUDA	// COMPUTE_ENTROPY_VOLUME_PER_SCANLINE_CUDA	// // COMPUTE_ENTROPY_VOLUME_CUDA		

	// ADD-BY-LEETEN 12/23/2009-BEGIN
	#define SCANNING_METHOD_SCAN_WHOLE_HISTOGRAM					0x11
	#define SCANNING_METHOD_HIERARCHICAL_SCAN						0x12
	#define SCANNING_METHOD_SCAN_ROWS_IN_PARALLEL					0x13
	#define SCANNING_METHOD_SKIP_WITH_MARGINAL_HISTOGRAM			0x14	// ADD-BY-LEETEN 01/06/2010

	#if	COMPUTE_ENTROPY_VOLUME	==	COMPUTE_ENTROPY_VOLUME_CUDA	
		#define SCANNING_METHOD		SCANNING_METHOD_SCAN_ROWS_IN_PARALLEL
	#endif
	// ADD-BY-LEETEN 12/23/2009-END

	#if	COMPUTE_ENTROPY_VOLUME	==	COMPUTE_ENTROPY_VOLUME_HOST
		#define SCANNING_METHOD		SCANNING_METHOD_SKIP_WITH_MARGINAL_HISTOGRAM	// SCANNING_METHOD_SCAN_WHOLE_HISTOGRAM
	#endif

	// ADD-BY-LEETEN 12/27/2009-BEGIN
	#if	COMPUTE_ENTROPY_VOLUME	==	COMPUTE_ENTROPY_VOLUME_PER_SCANLINE_CUDA	
		#define SCANNING_METHOD		SCANNING_METHOD_SCAN_ROWS_IN_PARALLEL	// SCANNING_METHOD_SCAN_WHOLE_HISTOGRAM	// SCANNING_METHOD_SCAN_ROWS_IN_PARALLEL
	#endif
	// ADD-BY-LEETEN 12/27/2009-END

	// ADD-BY-LEETEN 12/19/2009-BEGIN
	#if		COMPUTE_ENTROPY_VOLUME == COMPUTE_ENTROPY_VOLUME_HOST
		#define ENTROPY_VOLUME_POSTFIX "host"
	#elif	COMPUTE_ENTROPY_VOLUME == COMPUTE_ENTROPY_VOLUME_CUDA
		// ADD-BY-LEETEN 12/23/2009-BEGIN
		#if	HIERARCHICAL_SCANNING	
		#define ENTROPY_VOLUME_POSTFIX "hierarchical_cuda"
		#else	
		// ADD-BY-LEETEN 12/23/2009-END
		#define ENTROPY_VOLUME_POSTFIX "cuda"
		// ADD-BY-LEETEN 12/23/2009-BEGIN
		#endif	
		// ADD-BY-LEETEN 12/23/2009-END
	#elif	COMPUTE_ENTROPY_VOLUME == COMPUTE_ENTROPY_VOLUME_WITH_SORTING_CUDA
		#define ENTROPY_VOLUME_POSTFIX "w_sorting_cuda"
	#elif	COMPUTE_ENTROPY_VOLUME == COMPUTE_ENTROPY_VOLUME_PER_SCANLINE_CUDA
		#define ENTROPY_VOLUME_POSTFIX "per_scanline_cuda"
	// ADD-BY-LEETEN 12/23/2009-BEGIN
	#elif	COMPUTE_ENTROPY_VOLUME == COMPUTE_ENTROPY_VOLUME_SORT_PER_VOXEL_CUDA	
		#define ENTROPY_VOLUME_POSTFIX "per_voxel_cuda"					
	#elif	COMPUTE_ENTROPY_VOLUME == COMPUTE_ENTROPY_VOLUME_ON_SPARSE_HISTOGRAM_CUDA	
		#define ENTROPY_VOLUME_POSTFIX "sparse_matrix_cuda"					
	#elif	COMPUTE_ENTROPY_VOLUME == COMPUTE_ENTROPY_VOLUME_WITH_MARGINAL_HISTOGRAM	
		#define ENTROPY_VOLUME_POSTFIX "marginal_histogram_cuda"					
	// ADD-BY-LEETEN 12/23/2009-END

	// ADD-BY-LEETEN 12/29/2009-BEGIN
	#elif	COMPUTE_ENTROPY_VOLUME == COMPUTE_ENTROPY_VOLUME_WITH_SORTING_IN_VECTORS_CUDA	
			#define ENTROPY_VOLUME_POSTFIX "w_sorting_in_vector_cuda"
	// ADD-BY-LEETEN 12/29/2009-END
	#endif
	// ADD-BY-LEETEN 12/19/2009-END

	// ADD-BY-LEETEN 12/20/2009-BEGIN
	#define MAX_THREADS							128	// // 128
	#define NR_OF_THREADS_PER_HALF_WARP			16
	// ADD-BY-LEETEN 12/20/2009-END

	// ADD-BY-LEETEN 12/28/2009-BEGIN
	#define	MAX_Z_BLOCKS_IN_MEMORY				2
	// ADD-BY-LEETEN 12/28/2009-END

	#define MAX_MEMORY_SIZE						(1*(1<<27))

	#define RADIX_SORT_BITS						31
	// ADD-BY-LEETEN 12/18/2009-END

	// ADD-BY-LEETEN 12/07/2009-BEGIN
	#if	0	// DEL-BY-LEETEN	02/02/2010-BEGIN
		#define UPDATE_HISTOGRAM_ON_GPU				1
		#define COMPUTE_ENTROPY_ON_GPU				1
	#endif	// DEL-BY-LEETEN	02/02/2010-BEGIN
	#define	_ComputeEntropyVolume_PRINT_TIMING			0
	#define	_ComputeEntropyVolume_PRINT_LOOP_TIMING		0
	// ADD-BY-LEETEN 12/07/2009-END

	#define CHECK_ERROR_CONVERGENCE_BY_CUDPP	0

	// ADD-BY-LEETEN 2009/11/25-END

	#include "cuda_macro.h"

	// ADD-BY-LEETEN 12/14/2009-BEGIN
	#include "liblog.h"
	using namespace std;

	// ADD-BY-LEETEN 12/14/2009-END

	#include "libbuf.h"

////////////////////////////////////////////
#if	0	// TEST-MOD
	#define PRINT_FLOW_FUSION_TIMING	1
#else
	#define PRINT_FLOW_FUSION_TIMING	0
#endif
	#define USE_SHARED_MEMORY			0

	// ADD-BY-LEETEN 12/14/2009-BEGIN
	#define SHOW_COMPUTE_SRC_BIN_VOLUME_TIMING	1	
	// ADD-BY-LEETEN 12/14/2009-END

	// ADD-BY-LEETEN 11/04/2009-BEGIN
						// if this preprocessor is non zero, the volume is scanned via a for loop on the host
	#define DIFFUSION_BY_FOR_LOOP_ON_HOST		0
	// ADD-BY-LEETEN 11/04/2009-END

	// ADD-BY-LEETEN 10/02/2009-BEGIN
	#define BLOCK_DIM_X	16
	#define BLOCK_DIM_Y	8	// 8	
	// ADD-BY-LEETEN 10/02/2009-END

#endif	// __FLOW_DIFFUSION_CUDA_H__

/*

$Log: not supported by cvs2svn $
Revision 1.5  2010/01/06 17:01:36  leeten

[01/06/2010]
1. [ADD] Add a new preprocessor SCANNING_METHOD_SKIP_WITH_MARGINAL_HISTOGRAM, which will be effective if the preprocessor COMPUTE_ENTROPY_VOLUME is equal to COMPUTE_ENTROPY_VOLUME_HOST.

Revision 1.4  2009/12/31 02:38:40  leeten

[12/30/2009]
1. [ADD] Define a new preprocess MAX_Z_BLOCKS_IN_MEMORY.

Revision 1.3  2009/12/27 19:15:02  leeten

[12/27/2009]
1. [ADD] Define new preprocessors  COMPUTE_ENTROPY_VOLUME_PER_SCANLINE_CUDA, COMPUTE_ENTROPY_VOLUME_SORT_PER_VOXEL_CUDA, COMPUTE_ENTROPY_VOLUME_ON_SPARSE_HISTOGRAM_CUDA, COMPUTE_ENTROPY_VOLUME_WITH_MARGINAL_HISTOGRAM, and COMPUTE_ENTROPY_VOLUME_WITH_SORTING_IN_VECTORS_CUDA.
2. [ADD] Define new preprocessors SCANNING_METHOD_SCAN_WHOLE_HISTOGRAM, SCANNING_METHOD_HIERARCHICAL_SCAN and SCANNING_METHOD_SCAN_ROWS_IN_PARALLEL.
3. [DEL] Remove the inclusion of cudpp.

Revision 1.2  2009/12/20 03:33:47  leeten

[12/19/2009]
1. [ADD] Define the following preprocessors: COMPUTE_ENTROPY_VOLUME, COMPUTE_ENTROPY_VOLUME_CUDA, COMPUTE_ENTROPY_VOLUME_WITH_SORTING_CUDA and COMPUTE_ENTROPY_VOLUME_HOST.
2. [ADD] Define a postfix for the output file name for the src. entropy field.
3. [ADD] Define a preprocessor MAX_MEMORY_SIZE to decide the allocatable memory on the device side.
4. [ADD] Define a preprocessor RADIX_SORT_BITS as #bits to store the bin and the active id.

Revision 1.1  2009/12/17 20:22:35  leeten

[12/17/2009]
1. [1ST] First time checkin.


*/
